<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-4.1.xsd
    ">
	<context:component-scan base-package="com.euromoby.socialize.core" />

	<context:property-placeholder location="classpath:config.properties" />

	<task:annotation-driven />

	<bean id="config" class="com.euromoby.socialize.core.Config">
		<property name="taskPoolSize" value="${task.pool}" />
		<property name="clientTimeout" value="${http.timeout}" />
		<property name="proxyHost" value="${http.proxy.host}" />
		<property name="proxyPort" value="${http.proxy.port}" />
		<property name="twitterKey" value="${twitter.key}" />
		<property name="twitterSecret" value="${twitter.secret}" />
		<property name="vkAppId" value="${vk.app.id}" />
		<property name="vkSecureKey" value="${vk.secure.key}" />
		<property name="appTitle" value="${app.title}" />
		<property name="appUrl" value="${app.url}" />
		<property name="mailSenderName" value="${mail.sender.name}" />
		<property name="mailSenderAddress" value="${mail.sender.address}" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="${mail.smtp.username}" />
		<property name="password" value="${mail.smtp.password}" />
			
		<property name="javaMailProperties">
		   <props>
	       	      <prop key="mail.smtp.auth">true</prop>
	       	      <prop key="mail.smtp.starttls.enable">true</prop>
	       	   </props>
		</property>
	</bean>	


	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.euromoby.socialize.core.model.UserAccount</value>
				<value>com.euromoby.socialize.core.model.MailNew</value>
				<value>com.euromoby.socialize.core.model.MailSent</value>				
				<value>com.euromoby.socialize.core.model.PasswordResetRequest</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- prop key="hibernate.current_session_context_class">thread</prop -->
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- access -->
		<property name="driverClass" value="${db.driver}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.user}" />
		<property name="password" value="${db.password}" />
		<!-- pool sizing -->
		<property name="initialPoolSize" value="6" />
		<property name="minPoolSize" value="6" />
		<property name="maxPoolSize" value="25" />
		<property name="acquireIncrement" value="3" />
		<property name="maxStatements" value="0" />
		<!-- retries -->
		<property name="acquireRetryAttempts" value="30" />
		<property name="acquireRetryDelay" value="1000" /> <!-- 1s -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!-- refreshing connections -->
		<property name="maxIdleTime" value="180" /> <!-- 3min -->
		<property name="maxConnectionAge" value="10" /> <!-- 1h -->
		<!-- timeouts and testing -->
		<property name="checkoutTimeout" value="5000" /> <!-- 5s -->
		<property name="idleConnectionTestPeriod" value="60" /> <!-- 60 -->
		<property name="testConnectionOnCheckout" value="true" />
		<property name="preferredTestQuery" value="SELECT 1" />
		<property name="testConnectionOnCheckin" value="true" />
	</bean>

</beans>